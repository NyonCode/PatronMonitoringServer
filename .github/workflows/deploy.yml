name: Deploy

on:
  push:
    branches:
      - build

jobs:
  web-deploy:
    name: üéâ Build & Deploy
    runs-on: ubuntu-latest
    environment: deploy

    steps:
      # 1Ô∏è‚É£ Naƒçti k√≥d
      - name: üöö Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ P≈ôiprav .env (pro build i migraci)
      - name: üß© Prepare .env
        run: |
          if [ ! -f .env ]; then
            cp .env.example .env
          fi

          # Development/staging re≈æim pro build a migraci
          sed -i 's/^APP_ENV=.*/APP_ENV=development/' .env
          sed -i 's/^APP_DEBUG=.*/APP_DEBUG=true/' .env
          sed -i 's|^APP_URL=.*|APP_URL="http://patronmonitoring.cz/"|' .env

          # DB nastaven√≠
          sed -i "s/^#\? *DB_CONNECTION=.*/DB_CONNECTION=${{ vars.DB_CONNECTION }}/" .env
          sed -i "s/^#\? *DB_HOST=.*/DB_HOST=${{ secrets.DB_HOST }}/" .env
          sed -i "s/^#\? *DB_PORT=.*/DB_PORT=${{ secrets.DB_PORT }}/" .env
          sed -i "s/^#\? *DB_DATABASE=.*/DB_DATABASE=${{ secrets.DB_DATABASE }}/" .env
          sed -i "s/^#\? *DB_USERNAME=.*/DB_USERNAME=${{ secrets.DB_USERNAME }}/" .env
          sed -i "s/^#\? *DB_PASSWORD=.*/DB_PASSWORD=${{ secrets.DB_PASSWORD }}/" .env

      # 3Ô∏è‚É£ Nainstaluj PHP a Composer
      - name: üß∞ Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, bcmath, intl
          tools: composer

      - name: üì¶ Install Composer dependencies
        run: composer install --no-dev --optimize-autoloader

      # 4Ô∏è‚É£ Build frontend
      - name: üß∞ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: üî® Build Project
        run: |
          npm ci
          npm run build

      # 5Ô∏è‚É£ Upload p≈ôes FTP
      - name: üìÇ Deploy via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: ${{ vars.FTP_SERVER_DIR }}
          exclude: |
            **/.git*
            **/node_modules/**
            **/vendor/**

      # 6Ô∏è‚É£ Na serveru: composer install + migrace
      - name: ‚öôÔ∏è Run Composer & Migrate on Server
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SSH_SERVER }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            cd storage/d943a45e/92498fdb-2d7a-4965-a7a3-8a5db1f57c3f/patronmonitoring.cz/www
            php8.2 /bin/composer install --no-dev --optimize-autoloader
            php8.2 artisan migrate --force

      # 7Ô∏è‚É£ P≈ôepni na produkƒçn√≠ re≈æim
      - name: üß© Switch to Production
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SSH_SERVER }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            cd storage/d943a45e/92498fdb-2d7a-4965-a7a3-8a5db1f57c3f/patronmonitoring.cz/www

            # P≈ôepni .env na produkci
            sed -i 's/^APP_ENV=.*/APP_ENV=production/' .env
            sed -i 's/^APP_DEBUG=.*/APP_DEBUG=false/' .env

            php8.2 artisan optimize:clear
            php8.2 artisan storage:link
            php8.2 artisan optimize

            echo "‚úÖ Environment switched to PRODUCTION mode"
